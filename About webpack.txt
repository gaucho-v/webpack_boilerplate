пакет webpack - основной инструмент 
пакет webpack-cli - позволяет управлять пакетом вебпак через консоль

pattern [name] - [name].bundle.js - [name] = название точки входа
pattern [contenthash] - [name].[contenthash].js - [contenthash] = в случае изменения файла, [contenthash] будет изменен

плагины - дополнительный функционал ввиде классов (добавляются как новые инстансы классов с помощью слова new HTMLWebpackPlugin()), который мы можем добавить (устанавливаются дополнительно к проекту)
HTMLWebpackPlugin - взаимодействие с html файлом который у нас есть.
new HTMLWebpackPlugin({
	template: './src/index.html'
})
CleanWebpackPlugin - очищение выходной папки с файлами при новой сборке
Подключение немного отличается const {CleanWebpackPlugin} = require('clean-webpack-plugin')

Можно добавить поле content в объект, чтобы не прописывать src
context: path.resolve(__dirname, src)

лоадеры - это возможность добавлять к вебпаку новый функционал позволяющий работать с другими типа файлом кроме (js, json)
css-loader - позволяет добавить обработку импортов с расширением .css
style-loader - позволяет добавить стили css в секцию head

В package.json поменять поле main: index.js => private: true, от случайной публикации пакета

optimization: {
	splitChunks: {
		chunks: 'all'
	}
}
Позволяет оптимизировать бандл и разбить подключаемые библиотеки на чанки, чтобы они не грузились в разных местах, а могли подгрузиться один раз

new CopyWebpackPlugin - служит для переноса файлов из проекта в папку с бандлом и тд

MiniCssExtractPlugin - вынос стилей в отдельный файл

source-map добавляем в вебпак, чтобы была возможность работы с не минифицированным кодом из консоли в браузере
